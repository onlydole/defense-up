name: Release

on:
  push:
    tags:
      - '*'

permissions:
  actions: read
  attestations: write
  contents: write
  id-token: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/defense-up

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=sha,prefix={{tag}}-

      - name: Build and Push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Generate Container SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          format: cyclonedx-json
          output-file: container-sbom.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign container image
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          echo "Signing image with digest: ${DIGEST}"
          cosign sign --yes ${REGISTRY}/${IMAGE_NAME}@${DIGEST}

      - name: Attest Container SBOM
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          echo "Attesting SBOM to image with digest: ${DIGEST}"
          cosign attest --yes \
            --predicate container-sbom.json \
            --type cyclonedx \
            ${REGISTRY}/${IMAGE_NAME}@${DIGEST}

      - name: Verify supply chain artifacts
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          echo "Checking supply chain artifacts..."
          cosign tree ${REGISTRY}/${IMAGE_NAME}@${DIGEST}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Container Image
            ```
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ```
            
            Image digest: `${{ steps.build.outputs.digest }}`
            
            ## Verification
            
            Verify the signature and attestation:
            ```bash
            # Verify signature
            cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} \
              --certificate-identity-regexp "https://github.com/${{ github.repository }}/*" \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com
            
            # Verify SBOM attestation
            cosign verify-attestation ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} \
              --type cyclonedx \
              --certificate-identity-regexp "https://github.com/${{ github.repository }}/*" \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com
            ```
            
            View the SBOM:
            ```bash
            # Download and display SBOM
            cosign download attestation ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }} | \
              jq -r '.payload' | base64 -d | jq '.predicate'
            ```
            
            ## What's Included
            
            The container SBOM (attached below) includes:
            - All Python packages installed via pip
            - System packages from the base image
            - Base image layers and metadata
            - Complete dependency tree with versions and licenses
            
            This comprehensive SBOM is cryptographically attested to the container image using Sigstore.
          files: |
            container-sbom.json
          fail_on_unmatched_files: true
          generate_release_notes: true